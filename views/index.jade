section.slides.layout-regular.template-default
  article
    h1 <b>NodeJS:</b><br>JavaScript On The Other Side
    p Coddy<br>2011-07-10
    
  article
    q JavaScript runs on the server side?<br>You gotta be kidding me!
    .author Many JS Programmers
    
  article
    h3 Evolution of JavaScript
    ul.build
      li JavaScript was at first designed to run EVERYWHERE
        ul
          li LiveScript for the browser clients
          li LiveWire for the backend logic
      li Became a must during the Browser War
      .build
        |though for clients only
      li And now, the Server Side JavaScript (SSJS) arises...
      
  article.smaller
    //h3 Introducing the Rising Star    
    q To provide a <b><i>purely evented</i></b>, <b><i>non-blocking</i></b> infrastructure to script <b><i>highly concurrent</i></b> programs.
    .author The Node.JS Project
    p 
      img(src='images/node-logo.png').centered

  article
    h3 What is NodeJS?
    ul
      li Event loop Server-side JavaScript
      li Built on Google V8 engine
      li Single thread, one call stack 
      
  article
    h3 Hello World, in Node's Way.
    section
      pre
        |var http = require('http');
        |  http.createServer(function (req, res) {
        |    res.writeHead(200, {'Content-Type': 'text/plain'});
        |    res.end('Hello World');
        |  }).listen(8124, "127.0.0.1");
        |console.log('Server running at http://127.0.0.1:8124/')
    p 6 LoC to create a http server. 
           
  article
    h3 Why NodeJS?
    ul.build
      li It unifies the language between clients and servers
        ul
          //li E.G. Check user-upload file type (image)
          //li Support long polling
          //li No Back End, No Front End, Only JavaScript!
          li Possibility for code reuse
          li No need to encode/decode JSON object
      li It is suited for real-time web applications
        ul
          li Persistent connection from browser to server
          li No need to maintain separate threads
      li It makes better performance
        ul
          li Non I/O blocking
          li Make better use of CPU
      li It is soooooooo COOL!
       
  article
    h3 I/O Latency
    p L1: 3 cycles
    p L2: 14 cycles
    p RAM: 250 cycles
    p.blue Disk: 41,000,000 cycles
    p.red Network: 240,000,000 cycles
    .source http://s3.amazonaws.com/four.livejournal/20091117/jsconf.pdf
        
  article 
    h3 Blocking vs Non-blocking
    section
      p The blocking way:
      pre
        |var result = db.query("select..");
        |print('I can not print until the result is returned.')
        |print('And the I/O is damn SLOW.');
        |do_something_with_result(result);
    section
      p The non-blocking way:
      pre
        |db.query("select..", function (result) {
        |    print('Handle the result now.');
        |    do_something_with_result(result);
        |});
        |print('No more waiting.');
        |print('Do the following right away');
        |do_something_else();
        
  article
    h3 The Node Ecosystem
    p Over 4700 watchers on Github
    p More than 1600 modules posted
    p 60+ contributors
    p Three books in progres
    p Gets better everyday
    
  article
    h2 Node express demo

  article
    h3 NodeJS Limitations
    p Hard core CPU calculating
    p Large string transfer
    p 1G memory limit due to V8 engine
        
  article 
    h3 Something Bothoring Me
    ul
      li IDE support
        ul          
          li Vim is powerful, but no for everyone
          li 
            a(href='http://www.cloud9ide.com') Cloud9IDE 
            |might be a nice choice
      li Unit testing framework
      li Debugging & Event Handling
        ul
          li No long trace yet, hard to locate where sth went wrong
          li UncaughtException? The whole process would go down...
          
  article 
    h3 The Future Node
    p Windows support
    p New networking layer
    p Long traceback
    p ...
    .build
      p Linux + Node.js + MongoDB:
      p The new LAMP is on the way
            
    
  article
    h3 Resources
    p 
      a(href='http://nodejs.org/') http://nodejs.org/
    p 
      a(href='http://github.com/ry/node/wiki') http://github.com/ry/node/wiki
    p 
      a(href='http://howtonode.org/') http://howtonode.org/
    p 
      a(href='http://dailyjs.com/') http://dailyjs.com/
    p 
      a(href='http://cnodejs.org/') http://cnodejs.org/
        
    
